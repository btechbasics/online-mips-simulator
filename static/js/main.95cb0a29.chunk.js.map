{"version":3,"sources":["container/IDE/ide.js","component/navbar/Navbar.js","component/console/Console.js","component/sidebar/SideBar.js","samplePrograms.js","mips/processor.js","mips/parser.js","mips/cacheController.js","mips/stages.js/instructionFetch.js","mips/stages.js/instructionDecodeAndRegisterFetch.js","mips/stages.js/execute.js","mips/stages.js/memory.js","mips/stages.js/writeBack.js","App.js","serviceWorker.js","index.js"],"names":["warning","IDE","newValue","e","this","props","onCodeChange","String","className","mode","theme","placeholder","fontSize","style","width","height","name","editorProps","$blockScrolling","setOptions","tabSize","wrap","showPrintMargin","value","code","onChange","bind","annotations","enableBasicAutocompletion","Component","Navbar","state","result","runButton","running","href","color","type","id","accept","setFile","multiple","isShowing","backgroundColor","onClick","toggleCacheSettings","deleteFile","toggleDF","dataForw","toggleMS","moreStats","alert","display","assemble","execute","stepRun","React","Console","useState","isConsole","setIsConsole","classConsole","classPipeline","console","readOnly","operations","length","fontWeight","border","align","nowrap","SideBar","registers","dataSegment","sampleProgram","analysis","cacheTable","isOpen","setIsOpen","isCacheConfShow","setIsCacheConfShow","cacheNumber","setCacheNumber","cacheToDisplay","setCacheToDisplay","forEach","val","key","push","i","memoryUsed","bin","dec","parseInt","performance","Object","keys","pert","l1MissRate","l1CacheMiss","l1CacheHits","toString","slice","isNaN","l2MissRate","l2CacheMiss","l2CacheHits","cycles","stalls","toFixed","useEffect","hideCacheSettings","cacheSettingsDisplay","x","configureCache","target","l1CacheInfo","blockSize","associativity","latency","selected","cacheSize","l2CacheInfo","handleRefreshClick","stopPropagation","refreshCacheContents","cnt","table","document","getElementById","innerHTML","cacheRow","insertRow","j","cacheBlock","insertCell","setAttribute","pc","map","ele","idx","float","paddingRight","alignItems","mainMemoryConfig","mainMemory","bubbleSort","sumOfNum","tryOutPipeline","checkOutCache","processor","memory","Array","instrLabels","dataLables","Map","endOfInstr","reg","num","set","get","setRegister","parser","instruction","pointer","dataAddr","ptrArray","memPtr","lineWiseSplit","split","line","lineArr","trim","substring","word","len","cacheController","l1CacheConfig","l2CacheConfig","indexBitsL1","Math","log2","offsetBitsL1","tagBitsL1","indexBitsL2","offsetBitsL2","tagBitsL2","nbLinesL1","tagL1","cntL1","fill","dataL1","nbLinesL2","tagL2","cntL2","dataL2","hitsL1","missL1","hitsL2","missL2","tag","index","offset","setStartBlk","pow","nbBlocks","data","temp","cycle","startBlk","lruBlk","blk","evictedData","splice","tagBlk","some","item","writeToCacheL2","addr","undefined","currentCycle","offset1","index1","tag1","searchInCacheL1","foundAt","searchInCacheL2","writeToCacheL1","dataFetched","r3Types","r2Types","bTypes","wTypes","jTypes","sTypes","fetchInstruction","instructions","indexOf","instr","operator","dest","src1","src2","completed","label","decodeInstruction","getRegister","dep1","dep2","execution","res","readFromCache","writeBack","writeThrough","currentOperations","current_cycle","stalled","cacheControl","numCompInstr","App","print","clicked","sampleProgramTriggered","dataForwarding","pipeline","enableMoreStats","showCacheConfig","mainMemoryLatency","event","a","file","files","reader","FileReader","onload","setState","readAsText","CacheConfigure","reset","getElementsByClassName","textArea","parse","Execute","run","window","setInterval","clearInterval","StepRun","Display_Stall","row","col","stall","s","pipeline_stage","instrDecodeRegFetch","execute_counter","printToConsole","memoryLatency","memoryCounter","strCounter","cell","fetchedInstr","instrFetch","addToTable","cycleRow","instrRow","instrCell","join","scrollTop","scrollHeight","showCacheContents","cacheLevel","onSideNavClick","onSampleProgramClick","program","onDataForwardEnable","df","regV0","regA0","printNew","onEnableMoreStats","changedCode","level","onToggleCacheSettings","show","onMainMemoryConfig","render","onNavClick","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95cb0a29.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport AceEditor from \"react-ace\";\r\nimport 'brace/mode/mips_assembler';\r\nimport 'brace/theme/tomorrow_night';\r\n\r\nimport './ide.css'\r\n\r\nlet warning = []\r\n\r\nclass IDE extends Component {\r\n  onChange(newValue, e) {\r\n    // console.log('onChange', newValue, e);\r\n    this.props.onCodeChange(String(newValue))\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div className={\"IDE-wrapper\"}>\r\n              <AceEditor\r\n                  className={\"IDE\"}\r\n                  mode=\"mips_assembler\" \r\n                  theme=\"tomorrow_night\"\r\n                  placeholder=\"//write assembly code here...\"\r\n                  fontSize={18} \r\n                  style={{width: \"100%\", height: \"665px\"}}\r\n                  name=\"mipsIDE\" \r\n                  editorProps={{$blockScrolling: true}}\r\n                  setOptions={{tabSize: 4, wrap: false}}\r\n                  showPrintMargin={false}\r\n                  value = {this.props.code}\r\n                  onChange={this.onChange.bind(this)}\r\n                  annotations = {warning}\r\n                  enableBasicAutocompletion\r\n              />\r\n          </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default IDE;","import React from 'react'\r\nimport './Navbar.css';\r\n// import CODE from '../code';\r\n// const fs = require('fs');\r\n\r\nclass Navbar extends React.Component{\r\n    state = {\r\n        result: \"\"\r\n    }\r\n\r\n    render(){\r\n        var runButton = \"\"\r\n        if(this.props.running === 1){\r\n            runButton = <span href=\"#\" ><i className=\"fas fa-spinner\" style={{color: \"yellow\"}}></i> Running</span>\r\n        }\r\n        else if(this.props.running === 2){\r\n            runButton = <span href=\"#\" ><i className=\"fas fa-check\" style={{color: '\"yellow'}}></i> Done</span>\r\n        }\r\n        else{\r\n            runButton = <span href=\"#\" ><i className=\"fas fa-play\" style={{color: \"yellow\"}}></i> Run</span>\r\n        }\r\n        return (\r\n            <nav className=\"main-nav\">\r\n                <div className=\"leftSide\">\r\n                    <div className=\"brand-icon\">\r\n                        <i className=\"fas fa-microchip\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"nav-item nav-buttons upload\">\r\n                        <span className=\"file\">\r\n                            Upload\r\n                            <input type=\"file\" name=\"file\" id =\"fileInput\" accept=\".asm\" onChange={this.props.setFile.bind(this)} multiple/>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"nav-item nav-buttons\" style={this.props.isShowing?{backgroundColor: '#72757a'}:{}}>\r\n                        <span onClick={() => this.props.toggleCacheSettings()}>\r\n                            Cache Settings\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"nav-item nav-buttons\"> \r\n                        <span className=\"file\" onClick={this.props.deleteFile.bind(this)} >\r\n                            Clear\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"nav-item nav-buttons\" onClick={() => this.props.toggleDF()} style={this.props.dataForw? {backgroundColor: \"green\"}: {}}> \r\n                        <span>\r\n                            Data Forward\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"nav-item nav-buttons\" onClick={() => this.props.toggleMS()} style={this.props.moreStats? {backgroundColor: \"green\"}: {}}> \r\n                        <span>\r\n                            More Stats\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"nav-item nav-buttons\" onClick={() => alert(\r\n                        `Using The Simulator\\n1. Upload or Write Your Code\\n2. Enable/Disable DataForwarding Option (Disabled By Default)\\n3. Enable/Disable MoreStats To View Pipeline (Disabled By Default)\\n4. Configure The Cache\\n5. StepRun/Run Your MIPS Code\\n\\nCache Table does not get updated automatically, please use refresh button to get latest contents of the cache\\n\\nCheck Performance Of Program and Simulator in SideBar\\n** Execution may take few seconds depending on Configuration of Simulator` \r\n                    )}> \r\n                        <span>\r\n                            Help\r\n                        </span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"title\" style={{display: 'inline'}}>\r\n                    Mips Simulator\r\n                </div>\r\n\r\n                <div className=\"rightSide\" style={{display: 'inline'}}>\r\n                    <span className=\"nav-item  nav-buttons\" onClick={this.props.assemble}>\r\n                        <span href=\"#\" >Assemble</span>\r\n                    </span>\r\n                    <span className=\"nav-item  nav-buttons\" onClick={this.props.execute}>\r\n                        {runButton}\r\n                    </span>\r\n                    <span className=\"nav-item  nav-buttons\" onClick={this.props.stepRun}>\r\n                         <span href=\"#\" >Step-Run</span>\r\n                    </span>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport './Console.css'\r\nimport AceEditor from \"react-ace\";\r\nimport 'brace/theme/tomorrow_night';\r\n\r\nconst Console = props => {\r\n    var [isConsole, setIsConsole] = useState(true)\r\n\r\n    var classConsole = isConsole ? \"console-btn active\" : \"console-btn\"\r\n    var classPipeline = isConsole ? \"console-btn\" : \"console-btn active\"\r\n\r\n    const consoleScreen = () => {\r\n        setIsConsole(true)\r\n    }\r\n    const pipelineScreen = () => {\r\n        setIsConsole(false)\r\n    }\r\n    // console.log(\"Ops: \")\r\n    // console.log(props.operations.length)\r\n\r\n    return (\r\n        <div className={\"console-wrapper\"}>\r\n            <div className=\"console-nav\">\r\n                <span className={classConsole} onClick={() => consoleScreen()}>Console</span>\r\n                <span className={classPipeline} onClick={() => pipelineScreen()}>Pipeline</span>\r\n            </div>\r\n            <div style={!isConsole ? { display: 'none' } : { display: 'block' }}>\r\n                <AceEditor\r\n                    className={\"console\"}\r\n                    theme=\"tomorrow_night\"\r\n                    fontSize={14}\r\n                    style={{ width: \"100%\", height: \"230px\" }}\r\n                    name=\"console\"\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{ tabSize: 4, wrap: false }}\r\n                    showPrintMargin={false}\r\n                    value={props.console}\r\n                    readOnly\r\n                />\r\n            </div>\r\n            <div className=\"pipeline-screen\" style={!isConsole && (props.operations.length === 0 || !props.moreStats) ? { display: 'block', color: 'white'  } : { display: 'none' }}>\r\n                Enable More Stats And Run Your Program To See Instructions In Their Pipeline Stages ( Works Best With Step-Run )\r\n                <div style={{color: 'orange'}}><span style={{fontWeight:'bold'}}>Warning:</span> Do Not Turn On For Large Programs Like 'Bubble Sort', As Time Taken To Complete The Task May Increase By Large Amount Or System May Hang!!</div>\r\n            </div>\r\n            <div className=\"pipeline-screen\" style={!isConsole && props.operations.length > 0 && props.moreStats ? { display: 'block' } : { display: 'none' }}>\r\n                <table border='2' id=\"table-main\">\r\n\t\t\t\t\t<tr id=\"cycle-number\">\r\n\t\t\t\t\t\t<td align='center' nowrap=\"nowrap\" className=\"instr-cell\" id=\"instr-cell-heading\">Cycle/Instruction</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Console","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./SideBar.css\";\r\nconst SideBar = props => {\r\n  // console.log(props.registers)\r\n  // console.log(\"Memory Used: \" + props.memoryUsed)\r\n  var [isOpen, setIsOpen] = useState({\r\n    registers: false,\r\n    dataSegment: false,\r\n    sampleProgram: false,\r\n    analysis: false,\r\n    cacheTable: false\r\n  })\r\n\r\n  var [isCacheConfShow, setIsCacheConfShow] = useState(false)\r\n\r\n  var [cacheNumber, setCacheNumber] = useState(1)\r\n  var [cacheToDisplay, setCacheToDisplay] = useState(1)\r\n\r\n  var registers = []\r\n  props.registers.forEach((val, key) => {\r\n    registers.push({\r\n      name: key,\r\n      val: val\r\n    })\r\n  });\r\n\r\n  var dataSegment = []\r\n  for (let i = 0; i < props.memoryUsed / 4; i++) {\r\n    var bin = props.dataSegment[i]\r\n    dataSegment.push({\r\n      dec: parseInt(bin, 2),\r\n      bin: bin\r\n    })\r\n  }\r\n  // console.log(dataSegment)\r\n\r\n  var performance = \"\"\r\n  if (Object.keys(props.performance).length === 0 && props.running === 0) {\r\n    performance = <div className=\"pa-program\">Run your assemble code to check performance</div>\r\n  }\r\n  else if (props.running === 1) {\r\n    performance = <span className=\"pa-program\">Running...</span>\r\n  }\r\n  else {\r\n    let pert = \"%\"\r\n    let l1MissRate = ((props.performance.l1CacheMiss / (props.performance.l1CacheMiss + props.performance.l1CacheHits)) * 100).toString().slice(0, 3)\r\n    if (isNaN(l1MissRate)) {\r\n      l1MissRate = \"Memory Not Accessed\"\r\n      pert = \"\"\r\n    }\r\n    let l2MissRate = ((props.performance.l2CacheMiss / (props.performance.l2CacheHits + props.performance.l2CacheMiss)) * 100).toString().slice(0, 3)\r\n    if (isNaN(l2MissRate)) {\r\n      l2MissRate = \"Memory Not Accessed\"\r\n    }\r\n    performance = (<div>\r\n      <div className=\"pa-program\">Number of cycles: {props.performance.cycles}</div>\r\n      <div className=\"pa-program\">Number of stalls: {props.performance.stalls}</div>\r\n      <div className=\"pa-program\">IPC: {(1 / (1 + (props.performance.stalls / props.performance.cycles))).toFixed(2)}</div>\r\n      <div className=\"pa-program\">L1 Cache Misses: {props.performance.l1CacheMiss}</div>\r\n      <div className=\"pa-program\">L1 Cache Hits: {props.performance.l1CacheHits}</div>\r\n      <div className=\"pa-program\">L2 Cache Misses: {props.performance.l2CacheMiss}</div>\r\n      <div className=\"pa-program\">L2 Cache Hits: {props.performance.l2CacheHits}</div>\r\n      <div className=\"pa-program\">L1 Cache Miss Rate: {l1MissRate}{pert}</div>\r\n      <div className=\"pa-program\">L2 Cache Miss Rate: {l2MissRate}{pert}</div>\r\n    </div>)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.isShowing) {\r\n      setIsOpen({\r\n        registers: false,\r\n        dataSegment: false,\r\n        sampleProgram: false,\r\n        analysis: false,\r\n        cacheTable: false\r\n      })\r\n    }\r\n  }, [props.isShowing])\r\n\r\n  useEffect(() => {\r\n    setIsCacheConfShow(props.isShowing)\r\n  }, [props.isShowing])\r\n\r\n  useEffect(() => {\r\n    if (isOpen.analysis || isOpen.dataSegment || isOpen.registers || isOpen.sampleProgram || isOpen.cacheTable) {\r\n      setIsCacheConfShow(false)\r\n    }\r\n  }, [isOpen.analysis, isOpen.dataSegment, isOpen.registers, isOpen.sampleProgram, isOpen.cacheTable])\r\n\r\n  const { hideCacheSettings } = props\r\n\r\n  useEffect(() => hideCacheSettings(isCacheConfShow), [isCacheConfShow, hideCacheSettings])\r\n\r\n  var cacheSettingsDisplay = \"\"\r\n\r\n  if (cacheNumber === 1) {\r\n    cacheSettingsDisplay = (\r\n      <div className=\"cache-settings\">\r\n        <div className=\"cache-options\">\r\n          Cache Size:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(1, parseInt(x.target.value), props.l1CacheInfo.blockSize, props.l1CacheInfo.associativity, props.l1CacheInfo.latency)}>\r\n            <option value={16} selected={props.l1CacheInfo.cacheSize === 16}>16 Bytes</option>\r\n            <option value={32} selected={props.l1CacheInfo.cacheSize === 32}>32 Bytes</option>\r\n            <option value={64} selected={props.l1CacheInfo.cacheSize === 64}>64 Bytes</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Block Size:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(1, props.l1CacheInfo.cacheSize, parseInt(x.target.value), props.l1CacheInfo.associativity, props.l1CacheInfo.latency)}>\r\n            <option value={4} selected={props.l1CacheInfo.blockSize === 4}>4 Bytes</option>\r\n            <option value={8} selected={props.l1CacheInfo.blockSize === 8}>8 Bytes</option>\r\n            <option value={16} selected={props.l1CacheInfo.blockSize === 16}>16 Bytes</option>\r\n            <option value={32} selected={props.l1CacheInfo.blockSize === 32}>32 Bytes</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Associativity:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(1, props.l1CacheInfo.cacheSize, props.l1CacheInfo.blockSize, parseInt(x.target.value), props.l1CacheInfo.latency)}>\r\n            <option value={props.l1CacheInfo.cacheSize / props.l1CacheInfo.blockSize} selected={props.l1CacheInfo.associativity === props.l1CacheInfo.cacheSize / props.l1CacheInfo.blockSize}>Direct Mapped</option>\r\n            <option value={2} selected={props.l1CacheInfo.associativity === 2}>2 Way</option>\r\n            <option value={4} selected={props.l1CacheInfo.associativity === 4}>4 Way</option>\r\n            <option value={1} selected={props.l1CacheInfo.associativity === 1}>Fully Associative</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Latency:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(1, props.l1CacheInfo.cacheSize, props.l1CacheInfo.blockSize, props.l1CacheInfo.associativity, parseInt(x.target.value))}>\r\n            <option value={2} selected={props.l1CacheInfo.latency === 2}>2 Cycles</option>\r\n            <option value={3} selected={props.l1CacheInfo.latency === 3}>3 Cycles</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    cacheSettingsDisplay = (\r\n      <div className=\"cache-settings\">\r\n        <div className=\"cache-options\">\r\n          Cache Size:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(2, parseInt(x.target.value), props.l2CacheInfo.blockSize, props.l2CacheInfo.associativity, props.l2CacheInfo.latency)}>\r\n            <option value={64} selected={props.l2CacheInfo.cacheSize === 64}>64 Bytes</option>\r\n            <option value={128} selected={props.l2CacheInfo.cacheSize === 128}>128 Bytes</option>\r\n            <option value={256} selected={props.l2CacheInfo.cacheSize === 256}>256 Bytes</option>\r\n            <option value={512} selected={props.l2CacheInfo.cacheSize === 512}>512 Bytes</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Block Size:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(2, props.l2CacheInfo.cacheSize, parseInt(x.target.value), props.l2CacheInfo.associativity, props.l2CacheInfo.latency)}>\r\n            <option value={16} selected={props.l2CacheInfo.blockSize === 16}>16 Bytes</option>\r\n            <option value={32} selected={props.l2CacheInfo.blockSize === 32}>32 Bytes</option>\r\n            <option value={64} selected={props.l2CacheInfo.blockSize === 64}>64 Bytes</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Associativity:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(2, props.l2CacheInfo.cacheSize, props.l2CacheInfo.blockSize, parseInt(x.target.value), props.l2CacheInfo.latency)}>\r\n            <option value={props.l2CacheInfo.cacheSize / props.l2CacheInfo.blockSize} selected={props.l2CacheInfo.associativity === props.l2CacheInfo.cacheSize / props.l2CacheInfo.blockSize}>Direct Mapped</option>\r\n            <option value={2} selected={props.l2CacheInfo.associativity === 2}>2 Way</option>\r\n            <option value={4} selected={props.l2CacheInfo.associativity === 4}>4 Way</option>\r\n            <option value={8} selected={props.l2CacheInfo.associativity === 8}>8 Way</option>\r\n            <option value={1} selected={props.l2CacheInfo.associativity === 1}>Fully Associative</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"cache-options\">\r\n          Latency:\r\n          <select className=\"display-value\" onChange={(x) => props.configureCache(2, props.l2CacheInfo.cacheSize, props.l2CacheInfo.blockSize, props.l2CacheInfo.associativity, parseInt(x.target.value))}>\r\n            <option value={3} selected={props.l2CacheInfo.latency === 3}>3 Cycles</option>\r\n            <option value={4} selected={props.l2CacheInfo.latency === 4}>4 Cycles</option>\r\n            <option value={5} selected={props.l2CacheInfo.latency === 5}>5 Cycles</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleRefreshClick = e => {\r\n    if (e) e.stopPropagation()\r\n    if (isOpen.cacheTable) {\r\n      props.refreshCacheContents(cacheToDisplay)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen.cacheTable) {\r\n      if (cacheToDisplay === 1) {\r\n        let cnt = 0\r\n        var table = document.getElementById(\"cache-tableL1\")\r\n        table.innerHTML = \"\"\r\n        for (let i = 0; i < props.l1CacheInfo.cacheSize / props.l1CacheInfo.blockSize; i++) {\r\n          var cacheRow = table.insertRow(i)\r\n          cacheRow.className = \"cache-row\"\r\n          for (let j = 0; j < props.l1CacheInfo.blockSize / 4; j++) {\r\n            var cacheBlock = cacheRow.insertCell(j)\r\n            cacheBlock.setAttribute(\"nowrap\", \"nowrap\")\r\n            cacheBlock.className = `cache-block cache-blockL1${cnt}`\r\n            cnt++\r\n          }\r\n        }\r\n        handleRefreshClick()\r\n      }\r\n      else {\r\n        let cnt = 0\r\n        table = document.getElementById(\"cache-tableL2\")\r\n        table.innerHTML = \"\"\r\n        for (let i = 0; i < props.l2CacheInfo.cacheSize / props.l2CacheInfo.blockSize; i++) {\r\n          cacheRow = table.insertRow(i)\r\n          cacheRow.className = \"cache-row\"\r\n          for (let j = 0; j < props.l2CacheInfo.blockSize / 4; j++) {\r\n            cacheBlock = cacheRow.insertCell(j)\r\n            cacheBlock.setAttribute(\"nowrap\", \"nowrap\")\r\n            cacheBlock.className = `cache-block cache-blockL2${cnt}`\r\n            cnt++\r\n          }\r\n        }\r\n        handleRefreshClick()\r\n      }\r\n    }\r\n    else {\r\n      table = document.getElementById(\"cache-tableL1\")\r\n      table.innerHTML = \"\"\r\n      table = document.getElementById(\"cache-tableL2\")\r\n      table.innerHTML = \"\"\r\n    }\r\n  }, [isOpen, cacheToDisplay, props.l2CacheInfo.cacheSize, props.l2CacheInfo.blockSize, props.l1CacheInfo.cacheSize, props.l1CacheInfo.blockSize])\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div>\r\n        <div\r\n          className=\"sidebar-options\"\r\n          onClick={() => setIsOpen({\r\n            ...isOpen,\r\n            registers: !isOpen.registers\r\n          })}\r\n        >\r\n          {isOpen.registers ? <i className=\"fas fa-folder-open\"></i> : <i className=\"fas fa-folder\"></i>}\r\n          REGISTERS\r\n        </div>\r\n        <div className=\"registers\" style={isOpen.registers ? { display: 'block' } : { display: 'none' }}>\r\n          <div className=\"register\">\r\n            <span className=\"register_no\">PC = </span> <span className=\"register_val\">{props.pc}</span>\r\n          </div>\r\n          {registers.map((ele, idx) => {\r\n            if (idx < 32) { // temporary solution\r\n              const { name, val } = ele;\r\n              if (idx < 10) {\r\n                return (\r\n                  <div className=\"register\" key={idx}>\r\n                    <span className=\"register_no\">R{idx}</span>&nbsp;&nbsp;<span className=\"register_name\">[{name}]</span> = <span className=\"register_val\">{val}</span>\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <div className=\"register\" key={idx}>\r\n                  <span className=\"register_no\">R{idx}</span> <span className=\"register_name\">[{name}]</span> = <span className=\"register_val\">{val}</span>\r\n                </div>\r\n              )\r\n            }\r\n            return null\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div\r\n          className=\"sidebar-options\"\r\n          onClick={() => setIsOpen({\r\n            ...isOpen,\r\n            dataSegment: !isOpen.dataSegment\r\n          })}\r\n        >\r\n          {isOpen.dataSegment ? <i className=\"fas fa-folder-open\"></i> : <i className=\"fas fa-folder\"></i>}\r\n          DATA SEGMENT\r\n          <span style={{ color: 'white', float: 'right', paddingRight: '7px', fontSize: '12px', alignItems: 'center' }}>{props.memoryUsed} bytes/ 4 KB</span>\r\n        </div>\r\n        <div style={isOpen.dataSegment ? { display: 'block' } : { display: 'none' }}>\r\n          {\r\n            dataSegment.map((ele, idx) => {\r\n              return (\r\n                <div key={idx} className=\"data-segment\">{ele.dec}&nbsp;&nbsp;&nbsp;&nbsp;<span style={{ fontSize: \"11px\" }}>{ele.bin}</span></div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div\r\n          className=\"sidebar-options\"\r\n          onClick={() => setIsOpen({\r\n            ...isOpen,\r\n            analysis: !isOpen.analysis\r\n          })}\r\n        >\r\n          {isOpen.analysis ? <i className=\"fas fa-folder-open\"></i> : <i className=\"fas fa-folder\"></i>}\r\n          PERFORMANCE ANALYSIS\r\n        </div>\r\n        <div style={isOpen.analysis ? { display: 'block', color: 'white' } : { display: 'none' }}>\r\n          {performance}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div\r\n          className=\"sidebar-options\"\r\n          onClick={() => setIsOpen({\r\n            ...isOpen,\r\n            cacheTable: !isOpen.cacheTable\r\n          })}\r\n        >\r\n          {isOpen.cacheTable ? <i className=\"fas fa-folder-open\"></i> : <i className=\"fas fa-folder\"></i>}\r\n          CACHE TABLE\r\n          <span style={isOpen.cacheTable?{ float: 'right' }:{display:'none'}} onClick={e => handleRefreshClick(e)}><i className=\"fas fa-redo-alt\"></i></span>\r\n        </div>\r\n        <div style={isOpen.cacheTable ? { display: 'block', color: 'white' } : { display: 'none' }}>\r\n          <div className=\"cache-headers\">\r\n            <span className=\"cache-labels\" style={cacheToDisplay === 1 ? { backgroundColor: '#696b6a' } : {}}\r\n              onClick={() => {\r\n                setCacheToDisplay(1)\r\n              }}\r\n            >L1 Cache</span>\r\n            <span className=\"cache-labels\" style={cacheToDisplay === 2 ? { backgroundColor: '#696b6a' } : {}}\r\n              onClick={() => {\r\n                setCacheToDisplay(2)\r\n              }}\r\n            >L2 Cache</span>\r\n          </div>\r\n\r\n          <table border='2' id='cache-tableL1' style={cacheToDisplay !== 1 ? { display: 'none' } : {}}>\r\n          </table>\r\n\r\n          <table border='2' id='cache-tableL2' style={cacheToDisplay !== 2 ? { display: 'none' } : {}} >\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div\r\n          className=\"sidebar-options\"\r\n          onClick={() => setIsOpen({\r\n            ...isOpen,\r\n            sampleProgram: !isOpen.sampleProgram\r\n          })}\r\n        >\r\n          {isOpen.sampleProgram ? <i className=\"fas fa-folder-open\"></i> : <i className=\"fas fa-folder\"></i>}\r\n          SAMPLE PROGRAMS\r\n        </div>\r\n        <div style={isOpen.sampleProgram ? { display: 'block' } : { display: 'none' }}>\r\n          <div className=\"s-program\" onClick={() => { props.sampleProgram(\"bubbleSort\") }}><span style={{ color: 'yellow', fontSize: '11px' }}>asm </span>Bubble Sort</div>\r\n          <div className=\"s-program\" onClick={() => { props.sampleProgram(\"sumOfNums\") }}><span style={{ color: 'yellow', fontSize: '11px' }}>asm </span>Sum of first 10 natural numbers</div>\r\n          <div className=\"s-program\" onClick={() => { props.sampleProgram(\"tryOutPipeline\") }}><span style={{ color: 'yellow', fontSize: '11px' }}>asm </span>Try Out Pipeline</div>\r\n          <div className=\"s-program\" onClick={() => { props.sampleProgram(\"checkOutCache\") }}><span style={{ color: 'yellow', fontSize: '11px' }}>asm </span>Check Out Cache</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={isCacheConfShow ? { display: 'block', color: 'white' } : { display: 'none' }} className=\"cache-counter\">\r\n        <div className=\"cache-headers\">\r\n          <span className=\"cache-labels\" style={cacheNumber === 1 ? { backgroundColor: '#696b6a' } : {}}\r\n            onClick={() => setCacheNumber(1)}\r\n          >L1 Cache</span>\r\n          <span className=\"cache-labels\" style={cacheNumber === 2 ? { backgroundColor: '#696b6a' } : {}}\r\n            onClick={() => setCacheNumber(2)}\r\n          >L2 Cache</span>\r\n        </div>\r\n        <div>\r\n          {cacheSettingsDisplay}\r\n          <div className=\"cache-options\">\r\n            Main Memory Latency:\r\n              <select className=\"display-value\" onChange={(x) => props.mainMemoryConfig(parseInt(x.target.value))}>\r\n              <option value={6} selected={props.mainMemory === 6}>6 Cycles</option>\r\n              <option value={8} selected={props.mainMemory === 8}>8 Cycles</option>\r\n              <option value={10} selected={props.mainMemory === 10}>10 Cycles</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","const bubbleSort = `.data\r\narray: \r\n\t.word 4, 2, 1, 5, 3\r\n\r\n.text\r\nend:\r\n    jr $ra\r\n    \r\nprintLoop:\r\n    beq $t0, $t1, end\r\n    lw $s1, 0($s0)\r\n    li $v0, 1\r\n    add $a0, $zero, $s1\r\n    syscall\r\n    addi $s0, $s0, 4\r\n    addi $t0, $t0, 1\r\n    j printLoop\r\n    \r\nprint:\r\n    lui $s0, 0x1001\r\n    li $t0, 0\r\n    j printLoop\r\n\r\ninc:\r\n\taddi $s0, $s0, 4\r\n\tj loop1\r\n\r\nswap:\r\n\tsw $t4, 0($s0)\r\n\tsw $t6, 0($s2)\r\n\r\n\tlw $t6, 0($s0)\r\n\r\n\taddi $s2, $s2, 4\r\n\taddi $t3, $t3, 1\r\n\r\n\tj loop2\r\n\r\nloop2:\r\n\tbeq $t3, $t1, inc\r\n\tlw $t4, 0($s2)\r\n\r\n\tslt $t5, $t4, $t6 \r\n\tbne $t5, $zero, swap\r\n\r\n\taddi $s2, $s2, 4\r\n\taddi $t3, $t3, 1\r\n\r\n\tj loop2\r\n\r\n\r\nloop1:\r\n    beq $t0, $t1, print\r\n    \r\n    lw $t6, 0($s0)\r\n\taddi $t3, $t0, 1 \r\n\r\n\taddi $s2, $s0, 4\r\n\r\n\taddi $t0, $t0, 1\r\n\r\n\tj loop2\r\n\r\n.globl main\r\nmain:\r\n\tlui $s0, 0x1001\r\n\tli $t0, 0\r\n\tli $t1, 5\r\n    j loop1`\r\n    \r\nconst sumOfNum = `.data\r\n.text\r\n\r\nend:\r\n    li $v0, 1\r\n    add $a0, $zero, $s1\r\n    syscall\r\n    jr $ra\r\n\r\nsum:\r\n    beq $t0, $s0, end\r\n    add $s1, $s1, $t0\r\n    addi $t0, $t0, 1\r\n    j sum\r\n\r\n.globl main\r\nmain:\r\n    li $s0, 11\r\n    li $s1, 0\r\n    li $t0, 1\r\n    j sum   `\r\n\r\nconst tryOutPipeline = `.globl main\r\nmain:\r\n    addi $t0, $t0, 10\r\n    addi $t1, $t0, 10\r\n    addi $t2, $t1, 10\r\n    addi $t3, $t2, 10\r\n    addi $t4, $t3, 10\r\n`\r\n\r\nconst checkOutCache = `.data\r\narray:\r\n    .word 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\r\n\r\n.text\r\nend:\r\n    jr $ra\r\n\r\nsumarray2:\r\n    beq $t0, $t1, end\r\n    lw $t2, 0($s1)\r\n    add $s0, $t2, $s0\r\n    addi $t0, $t0, 1\r\n    addi $s1, $s1, 4\r\n    j sumarray2    \r\n\r\nsumagain:\r\n    li $t0, 0\r\n    li $t1, 10\r\n    lui $s1, 0x1001\r\n    j sumarray2  \r\n\r\nsumarray:\r\n    beq $t0, $t1, sumagain\r\n    lw $t2, 0($s1)\r\n    add $s0, $t2, $s0\r\n    addi $t0, $t0, 1\r\n    addi $s1, $s1, 4\r\n    j sumarray\r\n\r\n.globl main\r\nmain:\r\n    li $s0, 0\r\n    li $t0, 0\r\n    li $t1, 10\r\n    lui $s1, 0x1001\r\n    j sumarray\r\n`\r\n\r\nexport {\r\n    sumOfNum,\r\n    bubbleSort,\r\n    tryOutPipeline,\r\n    checkOutCache\r\n}","var processor = {\r\n    running: true,\r\n    memory: new Array(1024),\r\n    instrLabels: {},\r\n    dataLables: {},\r\n    // wordAddr: [],\r\n\r\n    registers: new Map(\r\n        [\r\n            [\"r0\", 0],\r\n            [\"at\", 0],\r\n            [\"v0\", 0],\r\n            [\"v1\", 0],\r\n            [\"a0\", 0],\r\n            [\"a1\", 0],\r\n            [\"a2\", 0],\r\n            [\"a3\", 0],\r\n            [\"t0\", 0],\r\n            [\"t1\", 0],\r\n            [\"t2\", 0],\r\n            [\"t3\", 0],\r\n            [\"t4\", 0],\r\n            [\"t5\", 0],\r\n            [\"t6\", 0],\r\n            [\"t7\", 0],\r\n            [\"s0\", 0],\r\n            [\"s1\", 0],\r\n            [\"s2\", 0],\r\n            [\"s3\", 0],\r\n            [\"s4\", 0],\r\n            [\"s5\", 0],\r\n            [\"s6\", 0],\r\n            [\"s7\", 0],\r\n            [\"t8\", 0],\r\n            [\"t9\", 0],\r\n            [\"k0\", 0],\r\n            [\"k1\", 0],\r\n            [\"gp\", 0],\r\n            [\"sp\", 0],\r\n            [\"s8\", 0],\r\n            [\"ra\", 0]\r\n        ]\r\n    ),\r\n    pc: 0,\r\n    endOfInstr: false\r\n}\r\n\r\nprocessor.setRegister = (reg, num) => {\r\n    processor.registers.set(reg, num)\r\n}\r\n\r\nprocessor.getRegister = (reg) => {\r\n    if(reg === \"zero\"){\r\n        // console.log(\"getting zero\")\r\n        return 0\r\n    }\r\n    return processor.registers.get(reg)\r\n}\r\n\r\nprocessor.reset = () => {\r\n    processor.running = true\r\n    processor.memory = new Array(1024)\r\n    processor.dataLables = {}\r\n    processor.instrLabels = {}\r\n    processor.pc = 0\r\n    processor.endOfInstr = false\r\n    processor.setRegister(\"sp\", 1024*4)\r\n    processor.registers = new Map(\r\n        [\r\n            [\"r0\", 0],\r\n            [\"at\", 0],\r\n            [\"v0\", 0],\r\n            [\"v1\", 0],\r\n            [\"a0\", 0],\r\n            [\"a1\", 0],\r\n            [\"a2\", 0],\r\n            [\"a3\", 0],\r\n            [\"t0\", 0],\r\n            [\"t1\", 0],\r\n            [\"t2\", 0],\r\n            [\"t3\", 0],\r\n            [\"t4\", 0],\r\n            [\"t5\", 0],\r\n            [\"t6\", 0],\r\n            [\"t7\", 0],\r\n            [\"s0\", 0],\r\n            [\"s1\", 0],\r\n            [\"s2\", 0],\r\n            [\"s3\", 0],\r\n            [\"s4\", 0],\r\n            [\"s5\", 0],\r\n            [\"s6\", 0],\r\n            [\"s7\", 0],\r\n            [\"t8\", 0],\r\n            [\"t9\", 0],\r\n            [\"k0\", 0],\r\n            [\"k1\", 0],\r\n            [\"gp\", 0],\r\n            [\"sp\", 0],\r\n            [\"s8\", 0],\r\n            [\"ra\", 0]\r\n        ]\r\n    )\r\n}\r\n\r\nexport default processor","import processor from \"./processor\";\r\n\r\nvar parser = {\r\n  instruction: [],\r\n  pointer: new Map(),\r\n  dataAddr: new Map(),\r\n  ptrArray: [],\r\n  memPtr: 0\r\n};\r\n\r\nparser.parse = code => {\r\n  const lineWiseSplit = [];\r\n\r\n  code.split(\"\\n\").forEach(line => {\r\n    var lineArr = line.trim().split(/[ ,.]+/)\r\n    if(!(lineArr.length === 1 && lineArr[0] === \"\")) lineWiseSplit.push(lineArr);\r\n  });\r\n  // console.log(lineWiseSplit)\r\n\r\n  lineWiseSplit.forEach((line, idx) => {\r\n    // console.log(line, line[0])\r\n    if (line[0][line[0].length - 1] === \":\") {\r\n      // console.log(\"Found One\")\r\n      parser.pointer.set(line[0].substring(0, line[0].length - 1), idx);\r\n      parser.ptrArray.push(line[0].substring(0, line[0].length - 1));\r\n    }\r\n  });\r\n\r\n  parser.memPtr = 0;\r\n\r\n  lineWiseSplit.forEach((line, idx) => {\r\n    if (line[1] === \"text\") {\r\n      return;\r\n    }\r\n    if (line[1] === \"word\") {\r\n      parser.dataAddr[parser.ptrArray[parser.memPtr]] = parser.memPtr;\r\n      line.forEach((word, idx) => {\r\n        if (idx > 1) {\r\n          // each val is of size 32 bits\r\n          var val = parseInt(word).toString(2);\r\n          const len = val.length;\r\n          for (let i = 0; i < 32 - len && !isNaN(parseInt(val, 2)); i++) {\r\n            val = \"0\" + val;\r\n          }\r\n          // console.log(\"Val: \" + val)\r\n          // console.log(isNaN(parseInt(val, 2))).\r\n          // console.log(parser.memPtr)\r\n          if(!isNaN(parseInt(val, 2))){\r\n            processor.memory[parser.memPtr] = val\r\n            parser.memPtr += 1;\r\n          }\r\n          // processor.memory[parser.memPtr + 1] = val.slice(8, 16);\r\n          // processor.memory[parser.memPtr + 2] = val.slice(16, 24);\r\n          // processor.memory[parser.memPtr + 3] = val.slice(24, 32);\r\n\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return lineWiseSplit\r\n};\r\n\r\nparser.reset = () => {\r\n  parser.instruction = []\r\n  parser.pointer = new Map()\r\n  parser.dataAddr = new Map()\r\n  parser.ptrArray = []\r\n}\r\n\r\nexport default parser;","import processor from \"./processor\";\r\n\r\nclass cacheController{\r\n    constructor(l1CacheConfig, l2CacheConfig){\r\n        this.indexBitsL1 = Math.log2(l1CacheConfig.associativity)\r\n        this.offsetBitsL1 = Math.log2(l1CacheConfig.blockSize/4)\r\n        this.tagBitsL1 = 32 - (this.indexBitsL1 + this.offsetBitsL1)\r\n\r\n        this.indexBitsL2 = Math.log2(l2CacheConfig.associativity)\r\n        this.offsetBitsL2 = Math.log2(l2CacheConfig.blockSize/4)\r\n        this.tagBitsL2 = 32 - (this.indexBitsL2 + this.offsetBitsL2)\r\n\r\n        this.nbLinesL1 = l1CacheConfig.cacheSize/l1CacheConfig.blockSize\r\n        this.tagL1 = new Array(this.nbLinesL1)\r\n        this.cntL1 = new Array(this.nbLinesL1).fill(0)\r\n        this.dataL1 = new Array(l1CacheConfig.cacheSize/4)\r\n        this.nbLinesL2 = l2CacheConfig.cacheSize/l2CacheConfig.blockSize\r\n        this.tagL2 = new Array(this.nbLinesL2)\r\n        this.cntL2 = new Array(this.nbLinesL2).fill(0)\r\n        this.dataL2 = new Array(l2CacheConfig.cacheSize/4)\r\n\r\n        this.hitsL1 = 0\r\n        this.missL1 = 0\r\n        this.hitsL2 = 0\r\n        this.missL2 = 0\r\n    }\r\n\r\n    searchInCacheL1(tag, index, offset){\r\n        if(offset.length === 0) offset = '0'\r\n        let setStartBlk = this.indexBitsL1 === 0? 0 : parseInt(index, 2)*(this.nbLinesL1/Math.pow(2, this.indexBitsL1))\r\n        // console.log(\"In L1\")\r\n        // console.log(tag, index, offset, setStartBlk, this.nbLinesL1/Math.pow(2, this.indexBitsL1))\r\n        for(let i=0; i<parseInt(this.nbLinesL1/Math.pow(2, this.indexBitsL1)); i++){\r\n            var fetchedTag = this.tagL1[setStartBlk + i]\r\n            // console.log((set*(this.nbLinesL1/Math.pow(2, index.toString(2).length))*Math.pow(2, this.offsetBitsL1)) + (i*Math.pow(2, this.offsetBitsL1)) + parseInt(offset, 2))\r\n            if(tag === fetchedTag){\r\n                // console.log(\"String Found at idx \" + (((set + i)*Math.pow(2, this.offsetBitsL1)) + parseInt(offset, 2)))\r\n                return this.dataL1[((setStartBlk + i)*Math.pow(2, this.offsetBitsL1)) + parseInt(offset, 2)]\r\n            }\r\n        }      \r\n        return null\r\n    }\r\n\r\n    searchInCacheL2(tag, index, offset, nbBlocks){\r\n        // console.log(this.dataL2)\r\n        // console.log(this.tagL2)\r\n        // console.log(tag, index, offset)\r\n        // console.log(nbBlocks)\r\n\r\n        let setStartBlk = this.indexBitsL2 === 0? 0 : parseInt(index, 2)*(this.nbLinesL2/Math.pow(2, this.indexBitsL2))\r\n        // console.log(\"StrtBlk\")\r\n        // console.log(setStartBlk)\r\n        // console.log(\"NbBlocks\")\r\n        // console.log(this.nbLinesL2/Math.pow(2, index.toString(2).length))\r\n        // // console.log(\"In L1\")\r\n        // console.log(tag, index, offset, set)\r\n        for(let i=0; i<parseInt(this.nbLinesL2/Math.pow(2, this.indexBitsL2)); i++){\r\n            var fetchedTag = this.tagL2[setStartBlk + i]\r\n            // console.log((set*(this.nbLinesL1/Math.pow(2, index.toString(2).length))*Math.pow(2, this.offsetBitsL1)) + (i*Math.pow(2, this.offsetBitsL1)) + parseInt(offset, 2))\r\n            if(tag === fetchedTag){\r\n                // console.log(\"String Found at idx \" + (((set + i)*Math.pow(2, this.offsetBitsL1)) + parseInt(offset, 2)))\r\n                let data = []\r\n                for(let j=0; j<nbBlocks; j++){\r\n                    let temp = this.dataL2[((setStartBlk + i)*Math.pow(2, this.offsetBitsL2)) + parseInt(offset, 2) + j]\r\n                    if(temp) {\r\n                        data.push(temp)\r\n                    }\r\n                    else{\r\n                        return null\r\n                    }\r\n                }\r\n                return data\r\n            }\r\n        }      \r\n        return null\r\n    }\r\n\r\n    writeToCacheL1(tag, index, data, cycle, offset = null){\r\n        // console.log(data)\r\n        // console.log(data)\r\n        if(typeof(offset) === \"string\" && offset.length === 0) offset = '0'\r\n        // console.log(tag, index, offset)\r\n        \r\n        let set = this.indexBitsL1 === 0? 0 : parseInt(index, 2)\r\n        \r\n        let startBlk = (set*(this.nbLinesL1/Math.pow(2, this.indexBitsL1)))\r\n\r\n        // console.log(\"StartBlk: \", startBlk)\r\n        \r\n        // if same tag is present\r\n        for(let i=startBlk; i<startBlk+this.nbLinesL1/Math.pow(2, this.indexBitsL1) && offset!==null; i++){\r\n            // console.log(this.tagL1[i])\r\n            if(this.tagL1[i] === tag){\r\n                // console.log(\"writing to cache L1 only\")\r\n                this.dataL1[i*Math.pow(2, this.offsetBitsL1) + parseInt(offset, 2)] = data\r\n                this.tagL1[i] = tag\r\n                this.cntL1[i] = cycle\r\n                return\r\n            }\r\n        }\r\n\r\n        // finding empty or LRU blk and replacing\r\n        let i =  startBlk + 1\r\n        // console.log(\"StartBlk: \" + startBlk)\r\n        let lruBlk = 0\r\n        while(i<this.nbLinesL1/Math.pow(2, this.indexBitsL1) + startBlk){\r\n            if(this.cntL1[lruBlk+startBlk] > this.cntL1[i]){\r\n                lruBlk = i - startBlk\r\n            }\r\n            i++;\r\n        }\r\n        // console.log(\"lruBlk: \" + lruBlk)\r\n        let blk = (set*(this.nbLinesL1/Math.pow(2, this.indexBitsL1))*Math.pow(2, this.offsetBitsL1)) + (lruBlk*Math.pow(2, this.offsetBitsL1))\r\n        let evictedData = this.dataL1.splice(blk, data.length, ...data)\r\n        // console.log(\"Evicted Data: \")\r\n        // console.log(evictedData)\r\n        // console.log(evictedData.some(value => typeof(parseInt(value, 2))===\"number\"))\r\n        let tagBlk = (set*(this.nbLinesL1/Math.pow(2, this.indexBitsL1))) + lruBlk\r\n        if(evictedData.some(value => typeof(parseInt(value, 2))===\"number\")){\r\n            let data = []\r\n            evictedData.forEach(item => {\r\n                if(item) data.push(item)\r\n            })\r\n            // console.log(data)\r\n            this.writeToCacheL2(this.tagL1[tagBlk].toString(2) + index.toString(2) + (blk % Math.pow(2, this.offsetBitsL1)).toString(2), data, cycle)\r\n        }\r\n        this.tagL1[tagBlk] = tag\r\n        this.cntL1[tagBlk] = cycle\r\n    }\r\n\r\n    writeToCacheL2(addr, data, cycle){\r\n        // console.log(\"EvictedData: \" + addr)\r\n        // console.log(data)\r\n        addr = addr.slice(0, 32)\r\n\r\n        let offset = addr.slice(32-this.offsetBitsL2)\r\n        let index = addr.slice(32-(this.offsetBitsL2 + this.indexBitsL2), 32-this.offsetBitsL2)\r\n        let tag = addr.slice(0, this.tagBitsL2)\r\n\r\n        // console.log(\"addr split: \")\r\n        // console.log(tag, index, offset)\r\n        // console.log(data)\r\n\r\n        let set = this.indexBitsL2 === 0? 0 : parseInt(index, 2)\r\n        let startBlk = (set*(this.nbLinesL2/Math.pow(2, this.indexBitsL2)))\r\n        // console.log(\"StartBlk: \", startBlk)\r\n        \r\n        // if empty space or same tag is present\r\n        for(let i=startBlk; i<startBlk+this.nbLinesL2/Math.pow(2, this.indexBitsL2); i++){\r\n            if(this.tagL2[i] === undefined || this.tagL2[i] === tag){\r\n                this.dataL2.splice(i*Math.pow(2, this.offsetBitsL2) + parseInt(offset, 2), data.length, ...data)\r\n                this.tagL2[i] = tag\r\n                this.cntL2[i] = cycle\r\n                return\r\n            }\r\n        }\r\n\r\n        // Else LRU policy to be applied\r\n        let i =  startBlk + 1\r\n        // console.log(\"StartBlk: \" + startBlk)\r\n        let lruBlk = 0\r\n        while(i<this.nbLinesL2/Math.pow(2, this.indexBitsL2) + startBlk){\r\n            if(this.cntL2[lruBlk+startBlk] > this.cntL2[i]){\r\n                lruBlk = i - startBlk\r\n            }\r\n            i++;\r\n        }\r\n        // console.log(\"lruBlk: \" + lruBlk)\r\n        let blk = (set*(this.nbLinesL2/Math.pow(2, this.indexBitsL2))*Math.pow(2, this.offsetBitsL2)) + (lruBlk*Math.pow(2, this.offsetBitsL2))\r\n        this.dataL2.splice(blk, data.length, ...data)\r\n        let tagBlk = (set*(this.nbLinesL2/Math.pow(2, this.indexBitsL2))) + lruBlk\r\n        this.tagL2[tagBlk] = tag\r\n        this.cntL2[tagBlk] = cycle\r\n    }\r\n\r\n    readFromCache(addr, currentCycle){\r\n        // console.log(\"Given Dec Addr: \", addr) \r\n        addr = addr + 268500992\r\n        addr = addr.toString(2) // 268500992 -> the start addr\r\n        \r\n        for(let i=addr.length; i<32; i++){\r\n            addr = \"0\" + addr\r\n        }\r\n        // console.log(\"In ReadFromCache : \", addr, currentCycle)\r\n\r\n        // console.log(\"Addr: \" + addr)\r\n\r\n        // console.log(\"Searching CacheL1\")\r\n        var offset1 = addr.slice(32-this.offsetBitsL1)\r\n        var index1 = addr.slice(32-(this.offsetBitsL1 + this.indexBitsL1), 32-this.offsetBitsL1)\r\n        var tag1 = addr.slice(0, this.tagBitsL1)\r\n       \r\n        var data = this.searchInCacheL1(tag1, index1, offset1)\r\n        var foundAt = \"l1\"\r\n        // console.log(\"L1Data: \")\r\n        // console.log(data)\r\n        \r\n        // the search in CacheL2\r\n        if(data === null){\r\n            // console.log(\"Searching CacheL2\")\r\n            let offset = addr.slice(32-this.offsetBitsL2)\r\n            let index = addr.slice(32-(this.offsetBitsL2 + this.indexBitsL2), 32-this.offsetBitsL2)\r\n            let tag = addr.slice(0, this.tagBitsL2)\r\n            \r\n            data = this.searchInCacheL2(tag, index, offset, Math.pow(2, this.offsetBitsL1))\r\n            foundAt = \"l2\"\r\n\r\n            if(data !== null){\r\n                this.writeToCacheL1(tag1, index1, data, currentCycle)\r\n                data = data[parseInt(offset1, 2) | 0]\r\n            }\r\n        }\r\n\r\n        // the search in main memory\r\n        if(data === null){\r\n            // console.log(\"Searching Main Memory\")\r\n            let nbBlocks = Math.pow(2, this.offsetBitsL1)\r\n            addr = (parseInt(addr, 2) - 268500992)\r\n            addr = addr - addr % Math.pow(2, this.offsetBitsL1)\r\n            data = []\r\n            for(let i=0; i<nbBlocks; i++){\r\n                // console.log(\" Getting Data at: \" + (addr + i))\r\n                data.push(processor.memory[addr + i])\r\n            }\r\n            foundAt = \"mm\"\r\n            this.writeToCacheL1(tag1, index1, data, currentCycle)\r\n            data = data[parseInt(offset1, 2) | 0]\r\n            // console.log(\"MM data: \", data)\r\n        }\r\n\r\n        // console.log(\"Final Data: \")\r\n        // console.log(parseInt(data, 2))\r\n        // console.log(\"Fetched Value = \", parseInt(data, 2))\r\n        return [parseInt(data, 2), foundAt]\r\n    }\r\n\r\n    writeThrough(addr, data, currentCycle){\r\n        // console.log(\"Writing Through\")\r\n        // console.log(\"Given DecAddr: \", addr)\r\n        // check for the presence of data addr in cacheL1 and update\r\n        addr = addr + 268500992\r\n        addr = addr.toString(2) // 268500992 -> the start addr\r\n\r\n        for(let i=addr.length; i<32; i++){\r\n            addr = \"0\" + addr\r\n        }\r\n\r\n        // console.log(\"In WriteThrough \", addr, currentCycle)\r\n        // console.log(\"Writing Val = \", data)\r\n\r\n        var offset = addr.slice(32-this.offsetBitsL1)\r\n        var index = addr.slice(32-(this.offsetBitsL1 + this.indexBitsL1), 32-this.offsetBitsL1)\r\n        var tag = addr.slice(0, this.tagBitsL1)\r\n\r\n        var dataFetched = this.searchInCacheL1(tag, index, offset)\r\n        if(dataFetched !== null){\r\n            // console.log(\"FetchedData: \")\r\n            // console.log(dataFetched)\r\n            // dataFetched[parseInt(offset, 2)] = data\r\n            this.writeToCacheL1(tag, index, data, currentCycle, offset)\r\n        }\r\n\r\n        // check for the presence of data addr in cacheL2 and update\r\n        offset = addr.slice(32-this.offsetBitsL2)\r\n        index = addr.slice(32-(this.offsetBitsL2 + this.indexBitsL2), 32-this.offsetBitsL2)\r\n        tag = addr.slice(0, this.tagBitsL2)\r\n\r\n        dataFetched = this.searchInCacheL2(tag, index, offset, 1)\r\n        // console.log(tag, index, offset)\r\n        // console.log(\"Writing Through L2 \", dataFetched)\r\n        if(dataFetched !== null){\r\n            this.writeToCacheL2(tag.toString()+index.toString()+offset.toString(), [data], currentCycle)\r\n        }\r\n\r\n        // update the contents of main memory\r\n        addr = (parseInt(addr, 2) - 268500992)\r\n        processor.memory[addr] = data\r\n    }\r\n}\r\n\r\nexport default cacheController","// IF stage with functionality\r\nimport processor from '../processor'\r\nimport parser from '../parser'\r\n\r\nconst r3Types = ['add', 'sub', 'slt'],\r\n      r2Types = ['addi', 'slti'],\r\n      bTypes = ['beq', 'bne'],\r\n      wTypes = ['lw', 'li', 'la', 'lui'],\r\n      jTypes = ['j', 'jr'],\r\n      sTypes = ['sw']\r\n\r\nconst fetchInstruction = (pc, instructions) => {\r\n    if(parser.pointer.get(instructions[pc][0].split(':')[0])){\r\n        pc += 1\r\n        processor.pc += 1 \r\n    }\r\n    // console.log(\"IF\", pc, instructions[pc])\r\n    if(r3Types.indexOf(instructions[pc][0]) >= 0){\r\n        processor.pc += 1\r\n        return {\r\n            instr: instructions[pc],\r\n            operator: instructions[pc][0],\r\n            dest: instructions[pc][1].split(\"$\")[1],\r\n            src1: instructions[pc][2].split(\"$\")[1],\r\n            src2: instructions[pc][3].split(\"$\")[1],\r\n            completed: false\r\n        }\r\n    }\r\n    else if(r2Types.indexOf(instructions[pc][0]) >= 0){\r\n        processor.pc += 1\r\n        return {\r\n            instr: instructions[pc],\r\n            operator: instructions[pc][0],\r\n            dest: instructions[pc][1].split(\"$\")[1],\r\n            src1: instructions[pc][2].split(\"$\")[1],\r\n            val: instructions[pc][3],\r\n            completed: false\r\n        }\r\n    }\r\n    else if(bTypes.indexOf(instructions[pc][0]) >= 0){\r\n        processor.pc += 1\r\n        return {\r\n            instr: instructions[pc],\r\n            operator: instructions[pc][0],\r\n            src1: instructions[pc][1].split(\"$\")[1],\r\n            src2: instructions[pc][2].split(\"$\")[1],\r\n            label: parser.pointer.get(instructions[pc][3]),\r\n            completed: false\r\n        }\r\n    }\r\n    else if(wTypes.indexOf(instructions[pc][0]) >= 0){\r\n        processor.pc += 1\r\n        if(instructions[pc][0] === 'lw'){\r\n            return {\r\n                instr: instructions[pc],\r\n                operator: instructions[pc][0],\r\n                dest: instructions[pc][1].split(\"$\")[1],\r\n                src1: instructions[pc][2].split(\"$\")[1].split(\")\")[0],\r\n                offset: parseInt(instructions[pc][2].split(\"(\")[0]),\r\n                completed: false\r\n            }\r\n        }\r\n        else if(instructions[pc][0] === 'li' || instructions[pc][0] === 'lui'){\r\n            return {\r\n                instr: instructions[pc],\r\n                operator: instructions[pc][0],\r\n                dest: instructions[pc][1].split(\"$\")[1],\r\n                val: parseInt(instructions[pc][2]),\r\n                completed: false\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                instr: instructions[pc],\r\n                operator: instructions[pc][0],\r\n                dest: instructions[pc][1].split(\"$\")[1],\r\n                addr: parser.pointer.get(instructions[pc][2]),\r\n                completed: false\r\n            }\r\n        }\r\n    }\r\n    else if(jTypes.indexOf(instructions[pc][0]) >= 0){\r\n        if(instructions[pc][0] === 'j'){\r\n            processor.pc = parser.pointer.get(instructions[pc][1])\r\n            return {\r\n                instr: instructions[pc],\r\n                operator: instructions[pc][0],\r\n                label: parser.pointer.get(instructions[pc][1]),\r\n                completed: false\r\n            }\r\n        }\r\n        else {\r\n            // processor.pc = parseInt(processor.getRegister(instructions[pc][1].split(\"$\")[1]))\r\n            processor.endOfInstr = true \r\n            return {\r\n                instr: instructions[pc],\r\n                operator: instructions[pc][0],\r\n                src1: instructions[pc][1].split(\"$\")[1],\r\n                completed: false\r\n            }\r\n        }\r\n    }\r\n    else if(sTypes.indexOf(instructions[pc][0]) >= 0){\r\n        processor.pc += 1\r\n        return{\r\n            instr: instructions[pc],\r\n            operator: instructions[pc][0],\r\n            dest: instructions[pc][2].split(\"$\")[1].split(\")\")[0],\r\n            src1: instructions[pc][1].split(\"$\")[1],\r\n            offset: parseInt(instructions[pc][2].split(\"(\")[0]),\r\n            completed: false\r\n        }\r\n    }\r\n    else if(instructions[pc][0] === \"syscall\"){\r\n        processor.pc += 1\r\n        return {\r\n            instr: instructions[pc],\r\n            operator: instructions[pc][0],\r\n            src1: \"a0\",\r\n            completed: false\r\n        }\r\n    }\r\n    else{\r\n        if(instructions[pc].length > 1){\r\n            alert(\"Operation not found: \" + instructions[pc][0])\r\n            processor.running = false\r\n            return\r\n        }\r\n        processor.pc += 1\r\n        return null\r\n    }\r\n}\r\n\r\nexport default fetchInstruction","// ID/RF stage with functionality\r\n// fetch values of registers, branch taken or not\r\n\r\nimport processor from '../processor'\r\n\r\nconst r3Types = ['add', 'sub', 'slt'],\r\n      r2Types = ['addi', 'slti'],\r\n      bTypes = ['beq', 'bne'],\r\n      wTypes = ['lw', 'li', 'la', 'lui'],\r\n      jTypes = ['j', 'jr'],\r\n      sTypes = ['sw']\r\n\r\nconst decodeInstruction = instr => {\r\n    // console.log(\"ID/RF\", instr)\r\n    if(r3Types.indexOf(instr.operator) >= 0){\r\n        instr.src1 = {\r\n            val: parseInt(processor.getRegister(instr.src1)),\r\n            reg: instr.src1\r\n        }\r\n        instr.src2 = {\r\n            val: parseInt(processor.getRegister(instr.src2)),\r\n            reg: instr.src2\r\n        }\r\n        return instr\r\n    } \r\n    else if(r2Types.indexOf(instr.operator) >= 0){\r\n        instr.src1 = {\r\n            val: parseInt(processor.getRegister(instr.src1)),\r\n            reg: instr.src1\r\n        }\r\n        return instr\r\n    }\r\n    else if(bTypes.indexOf(instr.operator) >= 0){\r\n        instr.src1 = {\r\n            val: parseInt(processor.getRegister(instr.src1)),\r\n            reg: instr.src1\r\n        }\r\n        instr.src2 = {\r\n            val: parseInt(processor.getRegister(instr.src2)),\r\n            reg: instr.src2\r\n        }\r\n        var src1 = instr.src1.val\r\n        var src2 = instr.src2.val\r\n\r\n        if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n            src1 = instr.dep1\r\n            instr.dep1 = \"\"\r\n        }\r\n\r\n        if(instr.dep2 !== undefined && instr.dep2 !== \"\"){\r\n            src2 = instr.dep2\r\n            instr.dep2 = \"\"\r\n        }\r\n\r\n        // console.log(\"SRC1: \" + src1 +\"SRC2: \" + src2)\r\n\r\n        if(instr.operator === 'beq' && src1 === src2){\r\n            processor.pc = instr.label\r\n        }\r\n        else if(instr.operator === 'bne' && src1 !== src2){\r\n            processor.pc = instr.label\r\n        }\r\n\r\n        return instr\r\n    }\r\n    else if(wTypes.indexOf(instr.operator) >= 0){\r\n        if(instr.operator === 'lw') instr.src1 = {val: parseInt(processor.getRegister(instr.src1)), reg: instr.src1}    \r\n        return instr\r\n    }\r\n    else if(jTypes.indexOf(instr.operator) >= 0){\r\n        if(instr.operator === 'jr'){\r\n            instr.src1 = {val: parseInt(processor.getRegister(instr.src1)), reg: instr.src1}\r\n            src1 = instr.src1.val\r\n            if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                src1 = instr.dep1\r\n                instr.dep1 = \"\"\r\n            }\r\n            processor.pc = src1\r\n        }\r\n        else{\r\n            processor.pc = instr.label\r\n        }\r\n        return instr\r\n    }\r\n    else if (sTypes.indexOf(instr.operator) >= 0){\r\n        instr.src1 = {val: parseInt(processor.getRegister(instr.src1)), reg: instr.src1}\r\n\r\n        return instr\r\n    }\r\n    else if(instr.operator === \"syscall\"){\r\n        instr.src1 = {val: parseInt(processor.getRegister(instr.src1)), reg: instr.src1}\r\n\r\n        return instr\r\n    }  \r\n}\r\n\r\nexport default decodeInstruction","// Exe stage with functionality\r\n\r\nimport processor from \"../processor\"\r\n\r\nconst execution = (instr, cacheController, currentCycle) => {\r\n    // console.clear()\r\n    // console.log(\"EX\", instr)\r\n        // alert(\"DF\")\r\n        switch (instr.operator) {\r\n            case 'add':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                instr.src2.val = processor.getRegister(instr.src2.reg)\r\n                var src1 = instr.src1.val\r\n                var src2 = instr.src2.val\r\n\r\n                if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n\r\n                if(instr.dep2 !== undefined && instr.dep2 !== \"\"){\r\n                    src2 = instr.dep2\r\n                    instr.dep2 = \"\"\r\n                }\r\n                instr.result = parseInt(src1) + parseInt(src2)\r\n                break\r\n            case 'addi':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                src1 = instr.src1.val\r\n\r\n                if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n                instr.result = parseInt(src1) + parseInt(instr.val)            \r\n                break\r\n            case 'sub':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                instr.src2.val = processor.getRegister(instr.src2.reg)\r\n                src1 = instr.src1.val\r\n                src2 = instr.src2.val\r\n\r\n                if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n\r\n                if(instr.dep2 !== undefined && instr.dep2 !== \"\"){\r\n                    src2 = instr.dep2\r\n                    instr.dep2 = \"\"\r\n                }\r\n                instr.result = parseInt(src1) - parseInt(src2)\r\n                break\r\n            case 'slt':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                instr.src2.val = processor.getRegister(instr.src2.reg)\r\n                src1 = instr.src1.val\r\n                src2 = instr.src2.val\r\n\r\n                if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n\r\n                if(instr.dep2 !== undefined && instr.dep2 !== \"\"){\r\n                    src2 = instr.dep2\r\n                    instr.dep2 = \"\"\r\n                }\r\n                var res = parseInt(src1) < parseInt(src2)\r\n                instr.result = res? 1 : 0\r\n                break\r\n            case 'slti':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                src1 = instr.src1.val\r\n\r\n                if(instr.dep1 !== undefined && instr.dep1 !== \"\"){\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n                res = parseInt(src1) < parseInt(instr.val) \r\n                instr.result = res? 1 : 0\r\n                break\r\n            case 'lw':\r\n                instr.src1.val = processor.getRegister(instr.src1.reg)\r\n                src1 = instr.src1.val\r\n\r\n                if (instr.dep1 !== undefined && instr.dep1 !== \"\") {\r\n                    src1 = instr.dep1\r\n                    instr.dep1 = \"\"\r\n                }\r\n                // console.log(instr)\r\n                const addr = (src1 - 268500992)/4 + parseInt(instr.offset/4)\r\n                // const val =  processor.memory[addr]\r\n                // const valDec = parseInt(val, 2)\r\n\r\n                // console.log(valDec, addr, val)\r\n                // console.log(\"ADDR: \", addr)\r\n                const result = cacheController.readFromCache(addr, currentCycle)\r\n                // console.log(addr, result[0], result[1])\r\n                instr.result = result[0]\r\n                instr.foundAt = result[1]\r\n\r\n                if(instr.foundAt === 'mm'){\r\n                    cacheController.missL1++\r\n                    cacheController.missL2++\r\n                }\r\n                else if(instr.foundAt === 'l2'){\r\n                    cacheController.missL1++\r\n                    cacheController.hitsL2++\r\n                }\r\n                else{\r\n                    cacheController.hitsL1++\r\n                }\r\n\r\n                break\r\n            case 'li':\r\n                instr.result = instr.val\r\n                break\r\n            case 'lui':\r\n                instr.result = instr.val << 16\r\n                break\r\n            case 'la':\r\n                instr.result = instr.addr\r\n                break\r\n\r\n            default: break;\r\n        }\r\n    return instr\r\n}\r\n\r\nexport default execution","// mem stage with functionality\r\n\r\nimport processor from '../processor'\r\n\r\nconst memory = (instr, cacheController, currentCycle) => {\r\n    // console.log(\"MEM\", instr)\r\n    if (instr.operator === 'lw') {\r\n        // console.log(instr)\r\n        instr.src1.val = processor.getRegister(instr.src1.reg)\r\n        var src1 = instr.src1.val\r\n\r\n        if (instr.dep1 !== undefined && instr.dep1 !== \"\") {\r\n            src1 = instr.dep1\r\n            instr.dep1 = \"\"\r\n        }\r\n\r\n        const addr = (src1 - 268500992)/4 + parseInt(instr.offset/4)\r\n        // const val = processor.memory[addr]\r\n        // const valDec = parseInt(val, 2)\r\n\r\n        // console.log(addr, val, valDec)\r\n        let result = cacheController.readFromCache(addr, currentCycle)\r\n        // console.log(addr, result)\r\n        instr.result = result[0]\r\n        processor.setRegister(instr.dest, instr.result)\r\n    }\r\n    else if (instr.operator === 'li' || instr.operator === 'lui') {\r\n        // console.log(\"LIing\")\r\n        if (instr.operator === 'li') {\r\n            processor.setRegister(instr.dest, parseInt(instr.val))\r\n        }\r\n        else {\r\n            processor.setRegister(instr.dest, instr.val << 16)\r\n        }\r\n    }\r\n    else if (instr.operator === 'la') {\r\n        processor.setRegister(instr.dest, instr.addr)\r\n    }\r\n}\r\n\r\nexport default memory","// WB stage with functionality\r\nimport processor from '../processor'\r\n\r\nconst writeBack = (instr, cacheController, currentCycle) => {\r\n    // console.log(\"WB\", instr)\r\n    if(instr[\"result\"] !== undefined && instr[\"dest\"] !== undefined){ \r\n        // console.log(instr.dest, instr.result)\r\n        processor.setRegister(instr.dest, instr.result)\r\n    }\r\n    if(instr.operator === 'sw'){\r\n        instr.src1.val = processor.getRegister(instr.src1.reg)\r\n        const addr = (parseInt(processor.getRegister(instr.dest) - 268500992)/4) + parseInt(instr.offset/4)\r\n        var val = instr.src1.val.toString(2)\r\n        const len = val.length\r\n        for(let i=0; i<32-len; i++){\r\n            val = \"0\" + val\r\n        }\r\n        \r\n        // processor.memory[addr] = val\r\n        cacheController.writeThrough(addr, val, currentCycle)\r\n    }\r\n    if(instr.operator === \"jr\"){\r\n        processor.running = false\r\n    }\r\n    instr.completed = true\r\n\r\n    return instr\r\n}\r\n\r\nexport default writeBack","import './App.css';\r\nimport React, { Component } from 'react';\r\n\r\nimport IDE from './container/IDE/ide';\r\nimport Navbar from './component/navbar/Navbar';\r\nimport Console from './component/console/Console'\r\nimport SideBar from './component/sidebar/SideBar'\r\n\r\nimport { bubbleSort, sumOfNum, tryOutPipeline, checkOutCache } from './samplePrograms'\r\n\r\n// importing from mips\r\nimport processor from './mips/processor'\r\nimport parser from './mips/parser'\r\nimport cacheController from \"./mips/cacheController\";\r\nimport instrFetch from './mips/stages.js/instructionFetch'\r\nimport instrDecodeRegFetch from './mips/stages.js/instructionDecodeAndRegisterFetch'\r\nimport execute from './mips/stages.js/execute'\r\nimport memory from './mips/stages.js/memory'\r\nimport writeBack from './mips/stages.js/writeBack'\r\n\r\n// some necessary elements\r\nvar currentOperations = []\r\nvar current_cycle = 1\r\nvar stalls = 0\r\nvar stalled = 0\r\nvar cacheControl = null\r\nvar numCompInstr = 0\r\n\r\nclass App extends Component {\r\n\r\n\tstate = {\r\n\t\tcode: \"\",\r\n\t\tinstructions: null,\r\n\t\tregisters: processor.registers,\r\n\t\tpc: 0,\r\n\t\tprint: \"//console...read-only\\n\",\r\n\t\tclicked: \"registers\",\r\n\t\tsampleProgramTriggered: false,\r\n\t\tdataForwarding: false,\r\n\t\trunning: 0,\r\n\t\tperformance: {},\r\n\t\tpipeline: [],\r\n\t\tenableMoreStats: false,\r\n\t\tl1CacheConfig: {\r\n\t\t\tcacheSize: 32,\r\n\t\t\tblockSize: 8,\r\n\t\t\tassociativity: 2,\r\n\t\t\tlatency: 2\r\n\t\t},\r\n\t\tl2CacheConfig: {\r\n\t\t\tcacheSize: 128,\r\n\t\t\tblockSize: 32,\r\n\t\t\tassociativity: 2,\r\n\t\t\tlatency: 4\r\n\t\t},\r\n\t\tshowCacheConfig: false,\r\n\t\tmainMemoryLatency: 6\r\n\t}\r\n\r\n\t// --- logic to upload and clear file ---\r\n\tsetFile = async (event) => {\r\n\t\tlet file = event.target.files[0];\r\n\t\t//creating a reader object\r\n\t\tvar reader = new FileReader();\r\n\r\n\t\t//reading file\r\n\t\treader.onload = () => {\r\n\t\t\t// console.log(reader.result);\r\n\t\t\tthis.setState({\r\n\t\t\t\tcode: String(reader.result)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treader.readAsText(file);\r\n\t}\r\n\r\n\tdeleteFile = (event) => {\r\n\t\t// localStorage.removeItem(\"result\");\r\n\t\t// window.location.reload()\r\n\t\tthis.setState({\r\n\t\t\tcode: \"\"\r\n\t\t})\r\n\t}\r\n\t\r\n\t// cache configure\r\n\tCacheConfigure = () => {\r\n\t\tcacheControl = new cacheController(this.state.l1CacheConfig, this.state.l2CacheConfig)\r\n\t}\r\n\r\n\t// --- assemble the code from file ---\r\n\tassemble = () => {\r\n\t\tprocessor.reset()\r\n\t\tparser.reset()\r\n\t\tnumCompInstr = 0\r\n\t\tthis.CacheConfigure()\r\n\r\n\t\tthis.setState({\r\n\t\t\trunning: 0\r\n\t\t})\r\n\r\n\t\tcurrentOperations = []\r\n\t\tcurrent_cycle = 1\r\n\t\tstalls = 0\r\n\t\tstalled = 0\r\n\t\t\r\n\t\tvar table = document.getElementsByClassName(\"pipeline-screen\")\r\n\t\ttable[1].innerHTML = (\r\n\t\t\t`<table border='2' id=\"table-main\">\r\n\t\t\t\t<tr id=\"cycle-number\">\r\n\t\t\t\t\t<td align='center' nowrap=\"nowrap\" class=\"instr-cell\" id=\"instr-cell-heading\">Cycle/Instruction</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>`\r\n\t\t)\r\n\r\n\r\n\t\t// var textArea = localStorage.getItem(\"result\")\r\n\t\tvar textArea = this.state.code\r\n\t\t// console.log(textArea)\r\n\t\tif (textArea === \"\") {\r\n\t\t\talert(\"Upload or write assembly code first!\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tinstructions: parser.parse(textArea)\r\n\t\t})\r\n\r\n\t\tif (!!parser.pointer.get(\"main\")) {\r\n\t\t\tprocessor.pc = parseInt(parser.pointer.get(\"main\"))\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprocessor.running = false\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tprint: this.state.print + \"Successfully Assembled...\\n\"\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t// --- execute in single step using repeated step-run\r\n\tExecute = () => {\r\n\t\tif (!this.state.instructions) {\r\n\t\t\talert(\"Assemble your code first!\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\trunning: 1\r\n\t\t})\r\n\r\n\t\tconst run = window.setInterval(() => {\r\n\t\t\tif (!processor.running) {\r\n\t\t\t\t// console.log(\"END OF INSTRUCTIONS\")\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprint: this.state.print + \"\\nEnd of Instructions...\",\r\n\t\t\t\t\trunning: 2,\r\n\t\t\t\t\tperformance: {\r\n\t\t\t\t\t\tcycles: current_cycle - 1,\r\n\t\t\t\t\t\tstalls: stalls,\r\n\t\t\t\t\t\tl1CacheHits: cacheControl.hitsL1,\r\n\t\t\t\t\t\tl1CacheMiss: cacheControl.missL1,\r\n\t\t\t\t\t\tl2CacheHits: cacheControl.hitsL2,\r\n\t\t\t\t\t\tl2CacheMiss: cacheControl.missL2,\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\twindow.clearInterval(run)\r\n\t\t\t\t// console.log(\"No. of cycles: \" + parseInt(current_cycle - 1))\r\n\t\t\t\t// console.log(\"No. of stalls: \" + stalls)\r\n\t\t\t\t// var cpi = 1 + (stalls / current_cycle)\r\n\t\t\t\t// console.log(\"IPC: \" + (1 / cpi))\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.StepRun()\r\n\r\n\t\t}, 0)\r\n\t}\r\n\r\n\r\n\t// --- step-run function implementing pipeline\r\n\tDisplay_Stall = (row, col) => {\r\n\t\tif (this.state.enableMoreStats) {\r\n\t\t\tvar cell = document.getElementsByClassName(`row${row}-col${col}`)\r\n\t\t\tcell[0].innerHTML = 'S'\r\n\t\t}\r\n\t\tstalls += 1\r\n\t}\r\n\tStepRun = () => {\r\n\t\tif (!this.state.instructions) {\r\n\t\t\talert(\"Assemble your code first!\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Do not do anything if we have already gone through all of the cycles.\r\n\t\tif (processor.pc >= this.state.instructions.length) {\r\n\t\t\tprocessor.endOfInstr = true\r\n\t\t\tif (currentOperations[currentOperations.length - 1].completed) {\r\n\t\t\t\tprocessor.running = false\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!processor.running) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tprint: this.state.print + \"\\nEnd of Instructions...\",\r\n\t\t\t\trunning: 2,\r\n\t\t\t\tperformance: {\r\n\t\t\t\t\tcycles: current_cycle - 1,\r\n\t\t\t\t\tstalls: stalls,\r\n\t\t\t\t\tl1CacheHits: cacheControl.hitsL1,\r\n\t\t\t\t\tl1CacheMiss: cacheControl.missL1,\r\n\t\t\t\t\tl2CacheHits: cacheControl.hitsL2,\r\n\t\t\t\t\tl2CacheMiss: cacheControl.missL2,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// console.clear()\r\n\t\t\t// console.log(\"DONE :)\")\r\n\t\t\t// console.log(currentOperations)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// console.clear()\r\n\t\t// console.log(\"Cycle: \" + current_cycle)\r\n\t\t// console.log(currentOperations)\r\n\r\n\t\tvar stall = 0;\r\n\t\tvar x = 0;\r\n\t\tvar s = \"\"\r\n\r\n\t\twhile (x < currentOperations.length) {\r\n\t\t\t// console.log(\"INTRC: \" + x)\r\n\t\t\t// console.log(currentOperations[x])\r\n\t\t\t// If the stall variable is set, then we should stall and not do any work.\r\n\t\t\tif (stall === 1) {\r\n\t\t\t\tthis.Display_Stall(x, current_cycle);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Find what stage the current instruciton is in and do work accordingly.\r\n\t\t\t\tswitch (currentOperations[x].pipeline_stage) {\r\n\r\n\r\n\t\t\t\t\tcase \"IF\":\r\n\t\t\t\t\t\t// Set the new stage to ID\r\n\t\t\t\t\t\tfor (let i = (x - 1); i >= numCompInstr; i--) {\r\n\t\t\t\t\t\t\t// console.log(\"I: \" + i)\r\n\r\n\t\t\t\t\t\t\tif (currentOperations[i].dest !== undefined && currentOperations[x].src1 !== undefined) {\r\n\t\t\t\t\t\t\t\t// We must check if data forwarding is enabled and handle that situation differently.\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src1 && (currentOperations[x].operator === \"beq\" || currentOperations[x].operator === \"bne\")) {\r\n\t\t\t\t\t\t\t\t\t// console.log(\"HERE\")\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"FORWARDING DATA 1\")\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"Result: \" + currentOperations[i].result)\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep1 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"MEM\" && currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// If forwarding is disabled and the previous instruction is not completed, stall.\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[i].dest !== undefined && currentOperations[x].src2 !== undefined) {\r\n\t\t\t\t\t\t\t\t// We must check if data forwarding is enabled and handle that situation differently.\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src2 && (currentOperations[x].operator === \"beq\" || currentOperations[x].operator === \"bne\")) {\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"FORWARDING DATA 2\")\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"Result: \" + currentOperations[i].result)\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep2 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"MEM\" && currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// If forwarding is disabled and the previous instruction is not completed, stall.\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If no stalls have been detected.\r\n\t\t\t\t\t\tif (stall !== 1) {\r\n\t\t\t\t\t\t\t// Move the instruction into the EX stage.\r\n\t\t\t\t\t\t\tcurrentOperations[x] = instrDecodeRegFetch(currentOperations[x])\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"ID/RF\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"ID/RF\":\r\n\t\t\t\t\t\t// console.log(\"X: \" + x)\r\n\t\t\t\t\t\t// Check if this instruction can be executed by comparing it against all previous instructions.\r\n\t\t\t\t\t\tfor (let i = (x - 1); i >= numCompInstr; i--) {\r\n\t\t\t\t\t\t\t// console.log(\"I: \" + i)\r\n\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage === \"EX\" && currentOperations[i].operator === currentOperations[x].operator) {\r\n\t\t\t\t\t\t\t\t// *** Structural Hazard ***\r\n\t\t\t\t\t\t\t\t// alert(\"S1\")\r\n\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[i].dest !== undefined && currentOperations[x].src1 !== undefined) {\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src1.reg) {\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep1 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"MEM\" && currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S2\")\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \" && !this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S2b\")\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[i].dest !== undefined && currentOperations[x].src2 !== undefined) {\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src2.reg) {\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep2 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"MEM\" && currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S3\")\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// If forwarding is disabled and the previous instruction is not completed, stall.\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \" && !this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S3b\")\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[i].dest && (currentOperations[i].dest === currentOperations[x].dest)) {\r\n\r\n\t\t\t\t\t\t\t\tif ((currentOperations[i].pipeline_stage === \"EX\") && ((1 - currentOperations[i].execute_counter) >= 0)) {\r\n\t\t\t\t\t\t\t\t\t// *** WAW Hazard ***\r\n\t\t\t\t\t\t\t\t\t// alert(\"S4\")\r\n\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\telse if ((currentOperations[i].pipeline_stage === \"EX\") && ((1 - currentOperations[i].execute_counter) === 0)) {\r\n\r\n\t\t\t\t\t\t\t\t// *** WB will happen at the same time ***\r\n\t\t\t\t\t\t\t\t// alert(\"S5\")\r\n\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If no stalls have been detected.\r\n\t\t\t\t\t\tif (stall !== 1) {\r\n\t\t\t\t\t\t\t// Move the instruction into the EX stage.\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"EX\";\r\n\t\t\t\t\t\t\tif (currentOperations[x].operator === 'syscall') {\r\n\t\t\t\t\t\t\t\tif(this.state.dataForwarding){\r\n\t\t\t\t\t\t\t\t\tthis.printToConsole(currentOperations[x-2].result, currentOperations[x-1].result) // need to correct this for all situations\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tthis.printToConsole(processor.getRegister(\"v0\"), processor.getRegister(\"a0\"))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcurrentOperations[x] = execute(currentOperations[x], cacheControl, current_cycle)\r\n\t\t\t\t\t\t\tif(currentOperations[x].operator === \"lw\"){\r\n\t\t\t\t\t\t\t\tswitch (currentOperations[x].foundAt) {\r\n\t\t\t\t\t\t\t\t\tcase \"l1\":\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].memoryLatency = this.state.l1CacheConfig.latency\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase \"l2\":\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].memoryLatency = this.state.l2CacheConfig.latency\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t\tcase \"mm\":\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].memoryLatency = this.state.mainMemoryLatency\r\n\t\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].memoryCounter = 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcurrentOperations[x].execute_counter++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"EX\":\r\n\t\t\t\t\t\tfor(let i=(x-1); i>=numCompInstr; i--){\r\n\t\t\t\t\t\t\t// *** Structural Hazard ***\r\n\t\t\t\t\t\t\tif (currentOperations[i].operator === \"lw\" && currentOperations[i].memoryCounter <= currentOperations[i].memoryLatency) {\r\n\t\t\t\t\t\t\t\t// alert(\"S1\")\r\n\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (currentOperations[i].dest !== undefined && currentOperations[x].src1 !== undefined) {\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src1.reg) {\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep1 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S2\")\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \" && !this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S2b\")\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[i].dest !== undefined && currentOperations[x].src2 !== undefined) {\r\n\t\t\t\t\t\t\t\tif (currentOperations[i].dest === currentOperations[x].src2.reg) {\r\n\t\t\t\t\t\t\t\t\tif (!currentOperations[i].completed && this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentOperations[x].dep2 = currentOperations[i].result\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \"WB\" && currentOperations[i].pipeline_stage !== \" \") {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S3\")\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// If forwarding is disabled and the previous instruction is not completed, stall.\r\n\t\t\t\t\t\t\t\t\t\tif (currentOperations[i].pipeline_stage !== \" \" && !this.state.dataForwarding) {\r\n\t\t\t\t\t\t\t\t\t\t\t// *** RAW Hazard **\r\n\t\t\t\t\t\t\t\t\t\t\t// alert(\"S3b\")\r\n\t\t\t\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If no stalls have been detected.\r\n\t\t\t\t\t\tif(currentOperations[x].operator === \"lw\"){\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"MEM\";\r\n\t\t\t\t\t\t\tcurrentOperations[x].memoryCounter++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (stall !== 1) {\r\n\t\t\t\t\t\t\t// Move the instruction into the EX stage.\r\n\t\t\t\t\t\t\tif(currentOperations[x].operator === \"sw\"){\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].strCounter = 0\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"MEM\";\r\n\t\t\t\t\t\t\tmemory(currentOperations[x], cacheControl, current_cycle)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"MEM\":\r\n\t\t\t\t\t\tfor(let i=(x-1); i>=numCompInstr; i--){\r\n\t\t\t\t\t\t\t// *** Structural Hazard ***\r\n\t\t\t\t\t\t\tif (currentOperations[i].operator === \"sw\" && currentOperations[i].strCounter <= this.state.mainMemoryLatency) {\r\n\t\t\t\t\t\t\t\tstall = 1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If no stalls have been detected.\r\n\t\t\t\t\t\tif (stall !== 1) {\r\n\t\t\t\t\t\t\tif(currentOperations[x].operator === \"sw\"){\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"WB\";\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].strCounter++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Move the instruction into the EX stage.\r\n\t\t\t\t\t\t\telse if(currentOperations[x].operator === 'lw' && currentOperations[x].memoryCounter === currentOperations[x].memoryLatency){\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].memoryCounter++;\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"WB\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (currentOperations[x].operator === 'lw' && currentOperations[x].memoryCounter < currentOperations[x].memoryLatency){\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"MEM\";\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].memoryCounter++;\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"WB\";\r\n\t\t\t\t\t\t\t\tcurrentOperations[x] = writeBack(currentOperations[x], cacheControl, current_cycle)\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif(currentOperations[x].operator === 'lw' && currentOperations[x].memoryCounter === currentOperations[x].memoryLatency){\r\n\t\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"MEM\";\r\n\t\t\t\t\t\t\t\tmemory(currentOperations[x], cacheControl, current_cycle)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"WB\":\r\n\t\t\t\t\t\t// Complete the execution of this instruction.\r\n\t\t\t\t\t\tif(currentOperations[x].operator === 'sw' && currentOperations[x].strCounter === this.state.mainMemoryLatency){\r\n\t\t\t\t\t\t\tcurrentOperations[x].strCounter++;\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \" \";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(currentOperations[x].operator === 'sw' && currentOperations[x].strCounter < this.state.mainMemoryLatency){\r\n\t\t\t\t\t\t\tcurrentOperations[x].strCounter++\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \"WB\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tnumCompInstr++\r\n\t\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \" \";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(currentOperations[x].operator === \"sw\" && currentOperations[x].strCounter === this.state.mainMemoryLatency){\r\n\t\t\t\t\t\t\tcurrentOperations[x] = writeBack(currentOperations[x], cacheControl, current_cycle)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \" \":\r\n\t\t\t\t\t\tcurrentOperations[x].pipeline_stage = \" \";\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\talert(\"Unrecognized Pipeline Stage!\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If a stall occured, set the output to \"s\".\r\n\t\t\t\tif (stall === 1) {\r\n\t\t\t\t\tthis.Display_Stall(x, current_cycle);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ts = currentOperations[x].pipeline_stage\r\n\t\t\t\t\tif (s !== \" \" && this.state.enableMoreStats) {\r\n\t\t\t\t\t\tvar cell = document.getElementsByClassName(`row${x}-col${current_cycle}`)\r\n\t\t\t\t\t\tcell[0].innerHTML = s\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Display the value on the screen.\r\n\t\t\t}\r\n\t\t\t// console.log(numCompInstr)\r\n\t\t\tx++;\r\n\t\t}\r\n\r\n\t\tif (stall !== 1 && !processor.endOfInstr) {\r\n\t\t\t// Issue a new instruction.\r\n\t\t\tif (currentOperations.length > 0 && (currentOperations[currentOperations.length - 1].operator === \"bne\" || currentOperations[currentOperations.length - 1].operator === \"beq\") && currentOperations[currentOperations.length - 1].pipeline_stage === \"ID/RF\") {\r\n\t\t\t\tstall = 1\r\n\t\t\t\tstalled = 1\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar fetchedInstr = instrFetch(processor.pc, this.state.instructions)\r\n\t\t\t\tif (fetchedInstr) {\r\n\t\t\t\t\tif (this.state.enableMoreStats) {\r\n\t\t\t\t\t\tthis.addToTable(x, fetchedInstr.instr)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfetchedInstr.pipeline_stage = \"IF\"\r\n\t\t\t\t\tfetchedInstr.execute_counter = 0\r\n\t\t\t\t\tcurrentOperations.push(fetchedInstr)\r\n\t\t\t\t\tif(stalled === 1){\r\n\t\t\t\t\t\tthis.Display_Stall(x, current_cycle-1)\r\n\t\t\t\t\t\tstalled = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.state.enableMoreStats) {\r\n\t\t\t\t\t\tcell = document.getElementsByClassName(`row${x}-col${current_cycle}`)\r\n\t\t\t\t\t\tcell[0].innerHTML = 'IF'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// console.log(\"Registers: \")\r\n\t\t// console.log(processor.registers)\r\n\t\tthis.setState({\r\n\t\t\tregisters: processor.registers\r\n\t\t})\r\n\r\n\t\t// Increment the cycle count.\r\n\t\tcurrent_cycle++;\r\n\t}\r\n\r\n\r\n\t// --- other dom logic ---\r\n\taddToTable = (x, instr) => {\r\n\t\tvar table = document.getElementById(\"table-main\")\r\n\t\tvar cycleRow = document.getElementById(\"cycle-number\")\r\n\t\tfor (let i = 5 * x; i < 5 * x + 5; i++) {\r\n\t\t\tvar cell = cycleRow.insertCell(i + 1)\r\n\t\t\tcell.setAttribute(\"align\", \"center\")\r\n\t\t\tcell.setAttribute(\"nowrap\", \"nowrap\")\r\n\t\t\tcell.className = \"num-cell\"\r\n\t\t\tcell.id = \"num-cell-heading\"\r\n\t\t\tcell.innerHTML = i + 1\r\n\t\t}\r\n\t\tvar instrRow = table.insertRow(x + 1)\r\n\t\tvar instrCell = instrRow.insertCell(0)\r\n\t\tinstrCell.className = `instr-cell row${x}-col${0}`\r\n\t\tinstrCell.innerHTML = instr.join(\" \")\r\n\t\tinstrCell.scrollTop = instrCell.scrollHeight\r\n\t\tfor (let i = 1; i <= 5 * x + 5; i++) {\r\n\t\t\tvar instrNum = instrRow.insertCell(i)\r\n\t\t\tinstrNum.className = `num-cell row${x}-col${i}`\r\n\t\t}\r\n\t}\r\n\r\n\tshowCacheContents = cacheLevel => {\r\n\t\tlet data = null\r\n\t\tif(cacheControl){\r\n\t\t\tif(cacheLevel === 1){\r\n\t\t\t\tdata = cacheControl.dataL1\r\n\t\t\t\tdata.forEach((item, idx) => {\r\n\t\t\t\t\tlet blk = document.getElementsByClassName(`cache-blockL1${idx}`)[0]\r\n\t\t\t\t\tif(blk) blk.innerHTML = isNaN(item)? \"\" : parseInt(item, 2)\r\n\t\t\t\t})\r\n\t\t\t} \r\n\t\t\tif(cacheLevel === 2){\r\n\t\t\t\tdata = cacheControl.dataL2\r\n\t\t\t\tdata.forEach((item, idx) => {\r\n\t\t\t\t\tlet blk = document.getElementsByClassName(`cache-blockL2${idx}`)[0]\r\n\t\t\t\t\tif(blk) blk.innerHTML = isNaN(item)? \"\" : parseInt(item, 2)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonSideNavClick = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tclicked: event\r\n\t\t})\r\n\t}\r\n\r\n\tonSampleProgramClick = program => {\r\n\t\tif (program === \"bubbleSort\") {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcode: bubbleSort\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if(program === 'sumOfNums'){\r\n\t\t\tthis.setState({\r\n\t\t\t\tcode: sumOfNum\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if(program === 'tryOutPipeline'){\r\n\t\t\tthis.setState({\r\n\t\t\t\tcode: tryOutPipeline\r\n\t\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({\r\n\t\t\t\tcode: checkOutCache\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonDataForwardEnable = () => {\r\n\t\tconst df = this.state.dataForwarding\r\n\t\tif (!df) {\r\n\t\t\tthis.assemble()\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tdataForwarding: !df\r\n\t\t})\r\n\t}\r\n\r\n\tprintToConsole = (regV0, regA0) => {\r\n\t\t//printing logic\r\n\t\tif (regV0 === 1) {\r\n\t\t\t// console.log(\"getting a0\", regA0)\r\n\t\t\tconst printNew = this.state.print + regA0 + \" \"\r\n\t\t\tthis.setState({\r\n\t\t\t\tprint: printNew\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonEnableMoreStats = () => {\r\n\t\tconst moreStats = this.state.enableMoreStats\r\n\t\tif (!moreStats) {\r\n\t\t\tthis.assemble()\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tenableMoreStats: !moreStats\r\n\t\t})\r\n\t}\r\n\r\n\tonCodeChange = changedCode => {\r\n\t\tthis.setState({\r\n\t\t\tcode: changedCode\r\n\t\t})\r\n\t}\r\n\r\n\tconfigureCache = (level, cacheSize, blockSize, associativity, latency) => {\r\n\t\tif(level === 1){\r\n\t\t\tthis.setState({\r\n\t\t\t\tl1CacheConfig: {\r\n\t\t\t\t\tcacheSize: cacheSize,\r\n\t\t\t\t\tblockSize: blockSize,\r\n\t\t\t\t\tassociativity: associativity,\r\n\t\t\t\t\tlatency: latency\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif(level === 2){\r\n\t\t\tthis.setState({\r\n\t\t\t\tl2CacheConfig: {\r\n\t\t\t\t\tcacheSize: cacheSize,\r\n\t\t\t\t\tblockSize: blockSize,\r\n\t\t\t\t\tassociativity: associativity,\r\n\t\t\t\t\tlatency: latency\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonToggleCacheSettings = (show = !this.state.showCacheConfig) => {\r\n\t\tthis.setState({\r\n\t\t\tshowCacheConfig: show\r\n\t\t})\r\n\t}\r\n\r\n\tonMainMemoryConfig = latency => {\r\n\t\tthis.setState({\r\n\t\t\tmainMemoryLatency: latency\r\n\t\t})\r\n\t}\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"main-screen\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Navbar\r\n\t\t\t\t\t\tsetFile={this.setFile}\r\n\t\t\t\t\t\tdeleteFile={this.deleteFile}\r\n\t\t\t\t\t\tassemble={this.assemble}\r\n\t\t\t\t\t\texecute={this.Execute}\r\n\t\t\t\t\t\tstepRun={this.StepRun}\r\n\t\t\t\t\t\ttoggleDF={this.onDataForwardEnable}\r\n\t\t\t\t\t\tdataForw={this.state.dataForwarding}\r\n\t\t\t\t\t\trunning={this.state.running}\r\n\t\t\t\t\t\ttoggleMS={this.onEnableMoreStats}\r\n\t\t\t\t\t\tmoreStats={this.state.enableMoreStats}\r\n\t\t\t\t\t\ttoggleCacheSettings={this.onToggleCacheSettings}\r\n\t\t\t\t\t\tisShowing={this.state.showCacheConfig}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<div style={{ width: '20%' }}>\r\n\t\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\t\tregisters={this.state.registers}\r\n\t\t\t\t\t\t\tpc={this.state.pc}\r\n\t\t\t\t\t\t\tclicked={this.state.clicked}\r\n\t\t\t\t\t\t\tonNavClick={this.onSideNavClick}\r\n\t\t\t\t\t\t\tdataSegment={processor.memory}\r\n\t\t\t\t\t\t\tmemoryUsed={parser.memPtr * 4}\r\n\t\t\t\t\t\t\tsampleProgram={this.onSampleProgramClick}\r\n\t\t\t\t\t\t\trunning={this.state.running}\r\n\t\t\t\t\t\t\tperformance={this.state.performance}\r\n\t\t\t\t\t\t\tconfigureCache={this.configureCache}\r\n\t\t\t\t\t\t\tl1CacheInfo={this.state.l1CacheConfig}\r\n\t\t\t\t\t\t\tl2CacheInfo={this.state.l2CacheConfig}\r\n\t\t\t\t\t\t\tisShowing={this.state.showCacheConfig}\r\n\t\t\t\t\t\t\thideCacheSettings={this.onToggleCacheSettings}\r\n\t\t\t\t\t\t\tmainMemoryConfig={this.onMainMemoryConfig}\r\n\t\t\t\t\t\t\tmainMemory={this.state.mainMemoryLatency}\r\n\t\t\t\t\t\t\trefreshCacheContents={this.showCacheContents}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ width: '80%' }}>\r\n\t\t\t\t\t\t<IDE\r\n\t\t\t\t\t\t\tonCodeChange={this.onCodeChange}\r\n\t\t\t\t\t\t\tcode={this.state.code}\r\n\t\t\t\t\t\t\tpc={this.state.pc}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div style={{ height: '1px', backgroundColor: 'white' }}></div>\r\n\t\t\t\t\t\t<Console\r\n\t\t\t\t\t\t\tconsole={this.state.print}\r\n\t\t\t\t\t\t\toperations={currentOperations}\r\n\t\t\t\t\t\t\tmoreStats={this.state.enableMoreStats}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}